// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZZG.DataAccess.Concrete.EfCore;

namespace ZZG.DataAccess.Migrations
{
    [DbContext(typeof(ZZGContext))]
    [Migration("20210411180634_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CategoryProductCategory", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductCategoriesCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductCategoriesProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "ProductCategoriesCategoryId", "ProductCategoriesProductId");

                    b.HasIndex("ProductCategoriesCategoryId", "ProductCategoriesProductId");

                    b.ToTable("CategoryProductCategory");
                });

            modelBuilder.Entity("ProductProductCategory", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductCategoriesCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductCategoriesProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "ProductCategoriesCategoryId", "ProductCategoriesProductId");

                    b.HasIndex("ProductCategoriesCategoryId", "ProductCategoriesProductId");

                    b.ToTable("ProductProductCategory");
                });

            modelBuilder.Entity("ZZG.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ZZG.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ZZG.Entities.ProductCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProductId");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("CategoryProductCategory", b =>
                {
                    b.HasOne("ZZG.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZZG.Entities.ProductCategory", null)
                        .WithMany()
                        .HasForeignKey("ProductCategoriesCategoryId", "ProductCategoriesProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductProductCategory", b =>
                {
                    b.HasOne("ZZG.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZZG.Entities.ProductCategory", null)
                        .WithMany()
                        .HasForeignKey("ProductCategoriesCategoryId", "ProductCategoriesProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
